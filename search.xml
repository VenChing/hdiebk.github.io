<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2018/07/27/B/"/>
      <url>/2018/07/27/B/</url>
      <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head>    <meta charset="utf-8">    <title>ul导航条</title>    <style>    *{      margin: 0;      padding: 0;    }      .nav{        width: 100%;        height: 60px;        background-color: #56d;      }      .nav li{        line-height: 60px;        float: left;        margin: 0 50px;        list-style: none;      }      ul{        overflow: hidden;      }    </style>  </head>  <body>    <div class="nav">      <ul>        <li> 首页</li>        <li> 资讯</li>        <li> 服务</li>        <li> 售后</li>        <!-- 额外标签法 -->        <li style="clear:both"> 关于</li>      </ul>    </div>  </body></html>]]></content>
      
      
    </entry>
    
    <entry>
      <title>前端学习-CSS</title>
      <link href="/2018/07/24/blog-css/"/>
      <url>/2018/07/24/blog-css/</url>
      <content type="html"><![CDATA[<p></p><h1>CSS-初印象</h1><h3>CSS全称为层叠样式表 (Cascading Style Sheets)(级联样式表)</h3><p>前端页面是把网页分成三个层次，即：HTML(结构层)、CSS(表示层)以及JavaScript(行为层)，而CSS通俗的说就像是女生的化妆品，用来美化结构层的。</p><p></p><p></p><h1>1.CSS三种写法：</h1><br> ①内部样式<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &lt;head&gt;</span><br><span class="line">   &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">   &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">   &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">   &lt;!-- 样式内容 --&gt;</span><br><span class="line">   &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><p></p><p>  ②外联样式<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;head&gt;</span><br><span class="line">   &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">   &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">   &lt;link rel=”stylesheet” href=”css的路径”&gt;  &lt;!-- 在head里面 --&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure></p><p>  ③行内样式<br>      通过内嵌(style=”xxx;”)来书写样式代码<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;background:#f5f9fa;&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p>  三种样式写法区别：<br>  内嵌法：样式只能作用于当前页面，不能被其他页面共享使用，代码量多的时候，界面容易混淆。<br>  外联法：作用范围是当前站点，现实了结构分离 谁调用谁生效，范围广，可以被其他页面共享。<br>  行内法：作用范围仅限当前标签，范围小，结构表现混在一起，代码量多的时候容易混淆。  </p><p></p><h3>2.认识标签类型</h3><br>①块级元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代表元素：&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;…&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;li&gt;、&lt;address&gt;、&lt;blockquote&gt;、&lt;form&gt;</span><br></pre></td></tr></table></figure><p></p><p>②行内元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代表元素：&lt;a&gt;、&lt;span&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;</span><br></pre></td></tr></table></figure></p><p>③行内快元素也称之为内联元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代表元素：&lt;input&gt;,&lt;img&gt;</span><br></pre></td></tr></table></figure></p><p>三种元素的特点：</p>①块元素:<pre>1.每个快属性标签都是从新的一行开始，而且之前的元素也会从下一行开始（独占一行）<br>2.快元素属性都可以设置宽，高，行高，间距<br>3.块元素属性宽度如果没有设置，则会默认父元素宽度的100%<br>4.块属性可以直接嵌套（p标签中不能嵌套div标签）<br></pre><br>②行内元素：<pre>1.行内元素和其它标签同处一行显示<br>2.行内元素无法设置宽，高，行高，间距<br>3.行元素的宽 高是直接由内部的文字或者图片等内容撑开（宽 高度由内容撑开）<br>4.行属性标签内部不能嵌套行属性标签（a链接内不能嵌套其他链接）<br></pre><br>③行内块元素：<pre>1.在同一行上显示<br>2.可以设置宽 高<br></pre><br>三者可以相互转换<br>   块元素转行内元素<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display:inline;</span><br></pre></td></tr></table></figure><br><br>   行内元素转换块元素<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display:block;</span><br></pre></td></tr></table></figure><br><br>   块元素和行内元素转换行内块元素(使用率最高)<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display:inline-block;</span><br></pre></td></tr></table></figure><br><br><h1>CSS选择器</h1><br><h3>选择器是一种选择标签的过程</h3><br>一个简单的标签如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;属性:值;属性:值......&#125;</span><br></pre></td></tr></table></figure><br><br>选择器的类型：<br>   <h3>标签选择器</h3><br>   <pre>标签{属性:值;}<br>   //特点：标签选择器定义之后。会将页面所有元素都执行这个标签样式。<br>  </pre><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        div&#123;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">            color: red  &lt;!-- 定义div标签字体大小为50px;总体颜色为红色 --&gt;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;这是一个div&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br><br><h3>属性选择器</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input[type=&quot;text&quot;][class] &#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><b>选择有type属性为text，并且有class属性的标签。</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input[type=&quot;text&quot;][class=&quot;id&quot;] &#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><b>选择有type属性为text，并且有class属性，并且class属性为 id 的标签。</b><br><br><h3>类选择器<em></em></h3><br><pre>.类名{属性:值;属性:值;}<br>  // 特点：谁调用，谁生效。一个类选择器可以被多个标签调用，同时一个标签可以调用多个类（类名可被多次调用）<br></pre><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;background-color:#ccc;&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;box&quot;&gt;这是一个div&lt;/div&gt;  </span><br><span class="line">&lt;!-- 调用类名为box  --&gt;</span><br></pre></td></tr></table></figure><br><br><ol>类选择器命名规则<br><li>不能以纯数字或者数字开头定义类名</li><li>不能使用特殊符号或者特殊符号开头(_ 除开)定义类名</li><li>不建议使用中文来命名</li><li>不推荐使用属性或者属性的值来命名</li></ol><br><p>常用命名</p><br><img src="http://t1.aixinxi.net/o_1cjd7qvib15pq1h3c1ibr1q0cl26a.png-w.jpg"><br><h3>ID选择器</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#自定义名称&#123;属性:值;&#125;</span><br></pre></td></tr></table></figure><br><br>  //特点：<br><strong>1.一个ID选择器在一个页面只能调用一次。如果使用2次或者2次以上，不符合w3c规范，JS调用会出问题。<br>2.一个标签只能调用一个ID选择器。<br>3.一个标签可以同时调用类选择器和ID选择器。<br></strong><br><h3>通配符</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#123;属性:值;&#125;&#123;属性:值;&#125;</span><br></pre></td></tr></table></figure><br><br><strong>特点：<br>   1.给所有的标签都使用相同的样式。<br>  2.不推荐使用，增加浏览器和服务器负担</strong><br>  <h1>css复合选择器</h1><br><strong>概念：复合选择器就是两个或多个基本选择器，通过不同的方式连接成的选择器。</strong><br>  <h3>交集选择器</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标签+类（ID）选择器&#123;属性：值；&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">span.box&#123;font-size:16px;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">特点：即要满足使用了某个标签，还要满足使用了类选择器或者ID选择器。</span><br></pre></td></tr></table></figure><br><br><h3>后代选择器</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">选择器+空格+选择器&#123;属性：值;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">body div span&#123;font-size:16px;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">后代选择器首选要满足包含（嵌套）关系。</span><br><span class="line">父集元素在前边，子集元素在后边。</span><br><span class="line">特点：无限制隔代。（下面都会生效）</span><br></pre></td></tr></table></figure><br><br><h3>子代选择器</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">选择器&gt;选择器&#123;属性:值;&#125;</span><br><span class="line"></span><br><span class="line">h1 &gt; strong &#123;font-size:16px;&#125;</span><br><span class="line"></span><br><span class="line">这个规则会把第一个 h1 下面的两个 strong 元素变为红色，但是第二个 h1 中的 strong 不受影响：</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;This is &lt;strong&gt;very&lt;/strong&gt; &lt;strong&gt;very&lt;/strong&gt; important.&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;This is &lt;em&gt;really &lt;strong&gt;very&lt;/strong&gt;&lt;/em&gt; important.&lt;/h1&gt;</span><br></pre></td></tr></table></figure><br><br><h3>并集选择器（群选择器）</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择器+，+选择器+，选择器&#123;属性:值;&#125;</span><br><span class="line">span ,body ,.blue &#123;font-size:16px;&#125;</span><br></pre></td></tr></table></figure><br><br><h3>伪类选择器</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">div:link&#123;...&#125;       链接默认状态</span><br><span class="line"></span><br><span class="line">div:visited&#123;...&#125;     链接访问之后的状态</span><br><span class="line"></span><br><span class="line">div:hover&#123;...&#125;       鼠标放到链接上显示的状态</span><br><span class="line"></span><br><span class="line">div:active&#123;...&#125;      链接激活的状态</span><br><span class="line"></span><br><span class="line">如果需要全部，则必须按照L V H A 这个顺序写，否则会出现不显示的情况</span><br><span class="line"></span><br><span class="line">div:focus&#123;...&#125;        获取焦点</span><br></pre></td></tr></table></figure><br><br><h1>文本元素</h1><br><h3>属性</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">font-size:50px;         //文字大小</span><br><span class="line">font-weight: 700;       //值从100-900，文字粗细,700约等于Bold，不推荐使用font-weight:bold;</span><br><span class="line">font-family:微软雅黑;    //文本的字体</span><br><span class="line">font-style: normal | italic;  //normal:默认值  italic:斜体</span><br><span class="line">line-height:             //行高</span><br></pre></td></tr></table></figure><br><br><h3>文本属性连写</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">font: font-style font-weight  font-size/line-height  font-family;</span><br><span class="line">font: italic 700 50px/40px  微软雅黑;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：font:后边写属性的值。一定按照书写顺序。</span><br><span class="line">文本属性连写文字大小和字体为必写项。</span><br></pre></td></tr></table></figure><br><br><h3>文字的表达方式</h3><br> 1.直接写中文名称<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-family: 微软雅黑;</span><br></pre></td></tr></table></figure><br><br> 2.写字体的英文名称<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-family: microsoft yahei;</span><br></pre></td></tr></table></figure><br><br>  <p>3.unicode 编码（解析更快）</p><br>  <img src="http://t1.aixinxi.net/o_1cjdcevp4l5s1kkk13jkqe91tera.png-w.jpg"><br><pre><br>如何找到某一字体相对应的unicode编码呢？<br><br>第一步：f12<br>第二步：找到console<br>第三步：输入escape(“宋体”) 注意英文的括号和双引号。<br></pre><br><img src="http://t1.aixinxi.net/o_1cjdcdbi1mpq1h711h9i1o8l1cuna.jpg-w.jpg"><br><h3>文本修饰</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-decoration:  none | underline | line-through | ...... // 链接下划线/删除线/......</span><br></pre></td></tr></table></figure><br><br><h1>CSS三大特性</h1><br><h3>层叠性</h3><br>当多个样式作用于同一个（同一类）标签时，样式发生了冲突，<strong>总是执行后边的代码(后边代码层叠前边的代码)。</strong>和标签调用选择器的顺序没有关系。<br><br><h3>继承性</h3><br>继承性发生的前提是包含（嵌套关系）<br>★文字颜色可以继承<br>★文字大小可以继承<br>★字体可以继续<br>★字体粗细可以继承<br>★文字风格可以继承<br>★行高可以继承<br><b>总结：</b>文字的所有属性都可以继承。<br><br><b>特殊情况：</b>h系列不能继承文字大小。（继承了但是不显示）（h1显示的是：你设置的font-size  2<br>h2显示的是：你设置的font-size * 1.5…….）<br><br>a链接标签不能继承文字颜色（继承了但是不显示，链接标签默认是蓝色）<br><br><h3>优先级</h3><br><strong>不同级别</strong><br>1.在属性后面使用 !important 会覆盖页面内任何位置定义的元素样式。<br>2.作为style属性写在元素内的样式<br>3.id选择器<br>4.类选择器<br>5.通配符选择器<br>6.浏览器自定义或继承<br><br><b>它们的优先级为：!important &gt; 行内样式&gt;ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性</b><br><br><strong>同一级别</strong><br>1.同一级别中后写的会覆盖先写的样式<br>2.应用权重计算（所用数字并不代表它们只值那个数，只是用来具体说明问题）<br><p></p><br> <li>内联样式表的权值为 1000</li><br> <li>ID 选择器的权值为 100</li><br> <li>Class 类选择器的权值为 10</li><br> <li>HTML 标签选择器的权值为 1</li><br><br><br><br><h1>背景属性</h1><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">background-color：    背景颜色</span><br><span class="line">background-image：    背景图片</span><br><span class="line">Background-repeat：    repeat(默认)  |  no-repeat |   repeat-x   |  repeat-y     背景平铺</span><br><span class="line">Background-position：  left  |  right  |  center（默认）  |  top  | bottom  背景定位</span><br><span class="line">Background-attachment   背景是否滚动   scroll（默认）  |  fixed</span><br></pre></td></tr></table></figure><br><br>Background-position  背景定位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">background-position: right; // 方位值只写一个的时候，另外一个值默认居中。</span><br><span class="line"></span><br><span class="line">background-position: right bottom // 写2个方位值的时候，顺序没有要求</span><br><span class="line"></span><br><span class="line">background-position: 20px 30px // 写2个具体值的时候，第一个值代表水平方向，第二个值代表垂直方向</span><br></pre></td></tr></table></figure><br><br>Background-attachment 背景滚动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scroll: 背景图的位置是基于盒子（假如是div）的范围进行显示</span><br><span class="line"></span><br><span class="line">fixed：背景图的位置是基于整个浏览器body的范围进行显示，如果背景图定义在div里面，而显示的位置在浏览器范围内但是不在div</span><br><span class="line">的范围内的话，背景图无法显示。</span><br></pre></td></tr></table></figure><br><br><h3>背景属性连写</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">background: red url(&quot;1.png&quot;) no-repeat 30px 40px scroll;</span><br><span class="line"></span><br><span class="line">连写的时候没有顺序要求，url为必写项</span><br></pre></td></tr></table></figure><br><br><h3>行高</h3><br>浏览器默认文字大小：16px<br><br>行高：是基线与基线之间的距离<br>行高 = 文字高度+上下边距<br><br>推荐行高使用像素为单位。<br><br><h1>盒子模型</h1><br><h3>border（边框）</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Border-top-style:  solid   实线</span><br><span class="line">                    dotted  点线</span><br><span class="line">                    dashed  虚线</span><br><span class="line">                        none 无边框</span><br><span class="line">Border-top-color   边框颜色</span><br><span class="line">Border-top-width   边框粗细</span><br><span class="line">除了有top系列外还有left,right,bottom系列</span><br></pre></td></tr></table></figure><br><br>边框属性的连写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">border-top: 1px solid #fff;</span><br><span class="line">没有顺序要求，线型为必写项</span><br></pre></td></tr></table></figure><br><br>四个边框值相同的写法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">border: 1px solid #fff;</span><br><span class="line">没有顺序要求，线型为必写项</span><br></pre></td></tr></table></figure><br><br>边框合并（细线边框）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-collapse:collapse;</span><br></pre></td></tr></table></figure><br><br>获取焦点<br><br><i>label for id 获取光标焦点（点击label也可以选择文本框）</i><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;label for=&quot;username&quot;&gt;用户名：&lt;/label&gt;&lt;input type=&quot;text&quot; class=&quot;username&quot; id=&quot;username&quot;&gt;&lt;/input&gt;</span><br></pre></td></tr></table></figure><br><br><label for="username">用户名：</label><input type="text" class="username" id="username"><br><br><br><h3>padding（内边距）</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">padding-left   |   right    |  top  |  bottom</span><br></pre></td></tr></table></figure><br><br>padding连写<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Padding: 20px;   //上右下左内边距都是20px</span><br><span class="line">Padding: 20px 30px;   //上下20px   左右30px</span><br><span class="line">Padding: 20px  30px  40px;  // 上内边距为20px  左右内边距为30px   下内边距为40</span><br><span class="line">Padding: 20px  30px   40px  50px;   //上20px 右30px  下40px  左  50px</span><br></pre></td></tr></table></figure><br><br><h3>margin（外边距）</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin-left   | right  |  top  |  bottom</span><br></pre></td></tr></table></figure><br><br> 外边距连写<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Margin: 20px;    上下左右外边距20PX</span><br><span class="line">Margin: 20px 30px;   上下20px  左右30px</span><br><span class="line">（margin: 0 auto; 盒子居中对齐  text-align:center 是盒子里面的内容居中）</span><br><span class="line">Margin: 20px  30px  40px;     上20px  左右30px   下  40px</span><br><span class="line">Margin: 20px  30px   40px  50px; 上20px   右30px   下40px  左50px</span><br></pre></td></tr></table></figure><br><br>  垂直方向外边距合并（取最大值）<br><b>两个盒子垂直，一个设置上外边距，一个设置下外边距，取的设置较大的值。</b><br><br>  嵌套的盒子外边距塌陷<br><b>嵌套的盒子，直接给子盒子设置垂直方向外边距的时候，会发生外边距的塌陷（父盒子跟着移动）</b><br>解决方法:<br><br>1.给父盒子设置边框<br><br>2.给父盒子overflow:hidden;<br><br><h3>标准盒子模型</h3><br><img src="http://t1.aixinxi.net/o_1cjden958tc21ain1vfovh4uura.jpg-w.jpg"><br><strong>从上图可以看到标准 W3C 盒子模型的范围包括 margin、border、padding、content，并且 content 部分不包含其他部分。(width和height是content的长与宽 )</strong><br><h3>IE盒子模型</h3><br><img src="http://t1.aixinxi.net/o_1cjdev10f6s1105hn4c1n8ddsqa.jpg-w.jpg"><br><strong>从上图可以看到 IE 盒子模型的范围也包括 margin、border、padding、content，和标准 W3C 盒子模型不同的是：IE 盒子模型的 content 部分包含了 border 和 pading。</strong><br><br>它们转换的方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">box-sizing: border-box; IE盒子</span><br><span class="line">box-sizing: content-box;  W3C盒子</span><br></pre></td></tr></table></figure><br><br><h1>浮动</h1><br> <h3>文档流（标准流）</h3><br>元素自上而下，自左而右，块元素独占一行，行内元素在一行上显示，碰到父集元素的边框换行。<br><br><h3>浮动布局</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float:  left   |   right （浮动方向）</span><br></pre></td></tr></table></figure><br><br>特点：<br>1.元素浮动之后不占据原来的位置（脱标）<br>2.浮动的盒子在一行上显示<br>3.行内元素浮动之后自动转换为行内块元素。（不推荐使用，转行内元素最好使用display: inline-block;）<br><br>浮动的作用<br>文本绕图<br><img src="http://t1.aixinxi.net/o_1cjdjr71t7981dq81s26jpi5qpa.png-w.jpg"><br><h3>制作导航（经常使用）</h3><br>- 把无序列表ul li 浮动起来做成的导航。<br><!-- <img src="http://t1.aixinxi.net/o_1cjdlf2eebcg16921plh1vfh1j28a.jpg-w.jpg" />html部分：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li&gt; 首页&lt;/li&gt;</span><br><span class="line">      &lt;li&gt; 资讯&lt;/li&gt;</span><br><span class="line">      &lt;li&gt; 服务&lt;/li&gt;</span><br><span class="line">      &lt;li&gt; 售后&lt;/li&gt;</span><br><span class="line">      &lt;li&gt; 关于&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br><br> css部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">*&#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">  .nav&#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 60px;</span><br><span class="line">    background-color: #56d;</span><br><span class="line">  &#125;</span><br><span class="line">  .nav li&#123;</span><br><span class="line">    line-height: 60px;</span><br><span class="line">    float: left;</span><br><span class="line">    margin: 0 50px;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">``` --&gt;</span><br><span class="line">- 网页布局</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdlnh8edbr1c881b0lge1agca.png-w.jpg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;清除浮动&lt;/h3&gt;</span><br><span class="line">问题：当父盒子没有定义高度，嵌套的盒子浮动之后，下边的元素发生位置错误（占据父盒子的位置）。</span><br><span class="line"></span><br><span class="line">&lt;b&gt;清除浮动不是不用浮动，清除浮动产生的问题。&lt;/b&gt;</span><br><span class="line"></span><br><span class="line">&lt;li&gt;方法一&lt;/li&gt;</span><br><span class="line">额外标签法：在最后一个浮动元素后添加标签。</span><br></pre></td></tr></table></figure><br><br>clear: left  |  right  | both // 工作里用的最多的是clear:both;<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdlttaj1pg712vq1sjs1gjj1rv9a.png-w.jpg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;li&gt;方法二&lt;/li&gt;</span><br><span class="line">给浮动元素的父集元素使用&lt;pre&gt;overflow:hidden;&lt;/pre&gt;</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdm575119683u21ho81g7a99na.png-w.jpg&quot; /&gt;</span><br><span class="line">注意：如果有内容出了盒子，不能使用这个方法。</span><br><span class="line"></span><br><span class="line">&lt;li&gt;方法三&lt;/li&gt;（推荐使用）</span><br><span class="line">伪元素清除浮动</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdm6e6125lttj9o513k11rkqa.png-w.jpg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;:after 相当于在当前盒子后加了一个盒子。&lt;/strong&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;CSS初始化&lt;/h1&gt;</span><br><span class="line">- 腾讯</span><br></pre></td></tr></table></figure><br><br>body,ol,ul,h1,h2,h3,h4,h5,h6,p,th,td,dl,dd,form,fieldset,legend,input,textarea,select{margin:0;padding:0}<br><br>body{font:12px”宋体”,”Arial Narrow”,HELVETICA;background:#fff;-webkit-text-size-adjust:100%;}<br><br>a{color:#2d374b;text-decoration:none}<br><br>a:hover{color:#cd0200;text-decoration:underline}<br><br>em{font-style:normal}<br><br>li{list-style:none}<br><br>img{border:0;vertical-align:middle}<br><br>table{border-collapse:collapse;border-spacing:0}<br><br>p{word-wrap:break-word}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 新浪</span><br></pre></td></tr></table></figure><br><br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div{margin:0;padding:0;border:0;}<br>body{background:#fff;color:#333;font-size:12px; margin-top:5px;font-family:”SimSun”,”宋体”,”Arial Narrow”;}<br>ul,ol{list-style-type:none;}<br>select,input,img,select{vertical-align:middle;}<br>a{text-decoration:none;}<br>a:link{color:#009;}<br>a:visited{color:#800080;}<br>a:hover,a:active,a:focus{color:#c00;text-decoration:underline;}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 淘宝</span><br></pre></td></tr></table></figure><br><br>body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }<br>body, button, input, select, textarea { font:12px/1.5tahoma, arial, \5b8b\4f53; }<br>h1, h2, h3, h4, h5, h6{ font-size:100%; }<br>address, cite, dfn, em, var { font-style:normal; }<br>code, kbd, pre, samp { font-family:couriernew, courier, monospace; }<br>small{ font-size:12px; }<br>ul, ol { list-style:none; }<br>a { text-decoration:none; }<br>a:hover { text-decoration:underline; }<br>sup { vertical-align:text-top; }<br>sub{ vertical-align:text-bottom; }<br>legend { color:#000; }<br>fieldset, img { border:0; }<br>button, input, select, textarea { font-size:100%; }<br>table { border-collapse:collapse; border-spacing:0; }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;overflow&lt;/h3&gt;</span><br><span class="line">&lt;pre&gt;</span><br><span class="line">overflow属性规定当内容溢出元素框时发生的事情.</span><br><span class="line"></span><br><span class="line">scroll：一直有滚动条.</span><br><span class="line">auto：只有内容出了盒子才有滚动条。&lt;/pre&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;定位&lt;/h3&gt;</span><br></pre></td></tr></table></figure><br><br>定位方向: left | right | top | bottom<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;静态定位（默认值）&lt;/h3&gt;</span><br></pre></td></tr></table></figure><br><br>position: static; // 就是文档流式的定位模式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;绝对定位&lt;/h3&gt;</span><br></pre></td></tr></table></figure><br><br>position:absolute;<br><br>然后使用left | right | top | bottom 来确定具体位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;特点：&lt;/b&gt;</span><br><span class="line">1.元素使用绝对定位之后不占据原来的位置（脱标）</span><br><span class="line">2.元素使用绝对定位，位置是从浏览器出发。</span><br><span class="line">3.嵌套的盒子，父盒子没有使用定位，子盒子绝对定位，子盒子位置是从浏览器出发。</span><br><span class="line">4.嵌套的盒子，父盒子使用定位，子盒子绝对定位，子盒子位置是从父元素位置出发。</span><br><span class="line">5.给行内元素使用绝对定位之后，转换为行内块。（不推荐使用，推荐使用display:inline-block;）</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;相对定位&lt;/h3&gt;</span><br></pre></td></tr></table></figure><br><br>position: relative;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;特点：&lt;/b&gt;</span><br><span class="line">1.使用相对定位，位置从自身出发。</span><br><span class="line">2.不脱标，其他的元素不能占有其原来的位置。</span><br><span class="line">3.子绝父相（父元素相对定位，子元素绝对定位），用的最多的场景。</span><br><span class="line">4.行内元素使用相对定位不能转行内块元素。</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;固定定位&lt;/h3&gt;</span><br></pre></td></tr></table></figure><br><br>position:fixed;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;特点：&lt;/b&gt;</span><br><span class="line">1.固定定位之后，不占据原来的位置（脱标）</span><br><span class="line">2.元素使用固定定位之后，位置从浏览器出发。</span><br><span class="line">3.元素使用固定定位之后，会转化为行内块（不推荐，推荐用display:inline-block;）</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;定位（脱标）的盒子居中对齐&lt;/h3&gt;</span><br><span class="line">&lt;pre&gt;margin:0 auto; 只能让标准流的盒子居中对齐&lt;/pre&gt;&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdpikrl1nk6ben16tf16nejppa.png-w.jpg&quot; /&gt;</span><br><span class="line">&lt;strong&gt;定位的盒子居中：子绝父相，然后子盒子先往右走父盒子的一半50%，在向左走子盒子的一半(margin-left:负值。)&lt;/strong&gt;</span><br><span class="line">&lt;pre&gt;PS：z-index:10改变层叠优先级，值越大优先级越高&lt;/pre&gt;</span><br><span class="line">&lt;h1&gt;标签包含规范&lt;/h1&gt;</span><br><span class="line">- div可以包含所有的标签。</span><br><span class="line">- p标签不能包含div h1等标签（一般包含行内元素）。</span><br><span class="line">- h1可以包含p，div等标签（一般不这样）。</span><br><span class="line">- 行内元素尽量包含行内元素，行内元素不要包含块元素。</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdppitm5dfrr814ksfm6odoa.png-w.jpg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;规避脱标流&lt;/h3&gt;</span><br><span class="line">- 尽量使用标准流。</span><br><span class="line">- 标准流解决不了的使用浮动。</span><br><span class="line">- 浮动解决不了的使用定位。</span><br></pre></td></tr></table></figure><br><br>margin-left:auto; //盒子一直往右冲，一直冲不动为止。也是 margin:0 auto; 的由来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;图片和文字垂直居中对齐&lt;/h1&gt;</span><br></pre></td></tr></table></figure><br><br>vertical-align 主要用在 inline-block 标签上，效果最好。<br>默认属性是: vertical-align:baseline;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">属性值标</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdptnbs121ha1h1usbmdsekca.png-w.jpg&quot; /&gt;</span><br><span class="line">&lt;h1&gt;CSS可见性&lt;/h1&gt;</span><br></pre></td></tr></table></figure><br><br>overflow:hidden;   溢出隐藏<br>visibility:hidden;   隐藏元素    隐藏之后还保留原来的位置。<br>display:none;       隐藏元素    隐藏之后不保留原来的位置。<br>Display:block;     元素可见<br><br><br>—————————————————-<br>Display:none  和display:block  常配合js使用（如：鼠标经过时出现，鼠标离开时消失）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;css之内容移除（logo优化）&lt;/h1&gt;</span><br><span class="line">- 方法一：</span><br></pre></td></tr></table></figure><br><br>text-indent:-5000em;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;img src=&quot;http://t1.aixinxi.net/o_1cjdq4e9t1aj0cik6um4uf81ca.png-w.jpg&quot; /&gt;</span><br><span class="line"> &lt;img src=&quot;http://t1.aixinxi.net/o_1cjdq7rgf1h2p1pjpomf1fe919n8a.png-w.jpg&quot; /&gt;</span><br><span class="line">&lt;b&gt;之所以要写着两个字是为了SEO，因为背景图片SEO看不懂.&lt;/b&gt;</span><br><span class="line"></span><br><span class="line">- 方法二：</span><br><span class="line">&lt;b&gt;将元素高度设置为0, 使用内边距将盒子撑开，给盒子使用overflow:hidden; 将文字隐藏。&lt;/b&gt;</span><br></pre></td></tr></table></figure><br><br>.box{<br>  width:300px;<br>  height:0;<br>  padding-top:100px;<br>  overflow:hidden;<br>  background:red;<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;CSS精灵图&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdqcskinjm1ikr124a7qq1fvga.png-w.jpg&quot; /&gt;</span><br><span class="line">1：上图所示为网页的请求原理图，当用户访问一个网站时，需要向服务器发送请求，网页上的每张图像都要经过一次请求才能展现给用户。</span><br><span class="line"></span><br><span class="line">2：然而，一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接受和发送请求，这将大大降低页面的加载速度。为了有效地减少服务器接受和发送请求的次数，提高页面的加载速度，出现了CSS精灵技术（也称CSS Sprites）。</span><br><span class="line">简单地说，CSS精灵是一种处理网页背景图像的方式。它将一个页面涉及到的所有零星背景图像都集中到一张大图中去，然后将大图应用于网页，这样，当用户访问该页面时，只需向服务发送一次请求，网页中的背景图像即可全部展示出来。通常情况下，这个由很多小的背景图像合成的大图被称为精灵图，如下图所示为淘宝网站中的一个精灵图。</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdqedsn11ko1n2mgo4emcnfha.png-w.jpg&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;工作原理：&lt;/h3&gt;</span><br><span class="line">CSS 精灵其实是将网页中的一些背景图像整合到一张大图中（精灵图）。然而，各个网页元素通常只需要精灵图中不同位置的某个小图，要想精确定位到精灵图中的某个小图，就需要使用CSS的background-image、background-repeat和background-position属性进行背景定位，其中最关键的是使用background-position属性精确地定位。</span><br><span class="line"></span><br><span class="line">举例：</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdqmc9s1pq513ib1251og1geea.png-w.jpg&quot; /&gt;</span><br></pre></td></tr></table></figure><br><br>&lt;!DOCTYPE html&gt;<br><html lang="en"><br><head><br>    <meta charset="UTF-8"><br>    <title>Document</title><br>    <style type="text/css"><br>        body,ul,li{<br>            margin: 0;<br>            padding: 0;<br>        }<br><br>        ul, li{<br>            list-style: none;<br>        }<br><br>        .box{<br>            height: 48px;<br>            background: #222;<br>            margin-top: 50px;<br>        }<br><br>        .con{<br>            width: 1182px;<br>            height: 48px;<br>            margin: 0 auto;<br>            position: relative;<br>        }<br><br>        .con ul li{<br>            float: left;<br><br>        }<br><br>        .con ul li a{<br>            text-decoration: none;<br>            color: #fff;<br>            display: inline-block;<br>            height: 48px;<br>            font: 16px/48px microsoft yahei;<br>            padding: 0 18px;<br>        }<br><br>        .con ul li a:hover{<br>            background: #2774A2;<br>        }<br><br>        .con .hot{<br>            position: absolute;<br>            width: 31px;<br>            height: 21px;<br>            background: url(“spirit.png”) -58px 0;<br>            left:221px;<br>            bottom:35px;<br>        }<br><br>        .con .new{<br>            position: absolute;<br>            width: 31px;<br>            height: 21px;<br>            background: url(“spirit.png”) -135px 0;<br>            left:90px;<br>            bottom:35px;<br>        }<br>    </style><br></head><br><body><br>    <div class="box"><br>        <div class="con"><br>            <ul><br>                <li><a href="#">首页</a></li><br>                <li><a href="#">Java</a></li><br>                <li><a href="#">IOS</a></li><br>                <li><a href="#">PHP</a></li><br>                <li><a href="#">C/C++</a></li><br>                <li><a href="#">UI设计</a></li><br>                <li><a href="#">前端与移动开发</a></li><br>                <li><a href="#">问答专区</a></li><br>                <li><a href="#">Python</a></li><br>                <li><a href="#">网络营销</a></li><br>                <li><a href="#">活动专区</a></li><br>            </ul><br>            <div class="hot"></div><br>            <div class="new"></div><br>        </div><br>    </div><br></body><br></html><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdqogid1bu6e2910611tppou6a.png-w.jpg&quot; /&gt;</span><br></pre></td></tr></table></figure><br><br>PS：之所以选择con作为父盒子而不是box作为父盒子，是因为box的宽度不定，不同的显示器宽度不同，那么new和hot的定位就有问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;CSS滑动门&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdr0h8j1bdn6hmbe71sha1gl2a.png-w.jpg&quot; /&gt;</span><br><span class="line">边上是这种圆弧型的或者其他形状的，可以变换长度的样式。</span><br><span class="line"></span><br><span class="line">&lt;b&gt;特点：浮动之后宽度不是父盒子的宽度，而是内容撑开的宽度。&lt;/b&gt;</span><br></pre></td></tr></table></figure><br><br>&lt;!DOCTYPE html&gt;<br><html lang="en"><br><head><br>    <meta charset="UTF-8"><br>    <title>Document</title><br>    <style type="text/css"><br>        body,ul,li{<br>            margin: 0;<br>            padding: 0;<br>        }<br>        ul,li{<br>            list-style: none;<br>        }<br>        ul li{<br>            float: left;<br>        }<br>        ul li a{<br>            display: inline-block;<br>            height: 35px;<br>            background: url(“bg_r1_c1.png”) no-repeat;<br>            padding-left: 7px;<br>        }<br><br>        ul li a span{<br>            display: inline-block;<br>            height: 35px;<br>            background: url(“bg_r1_c2.png”) right;<br>            padding-right: 25px;<br>            color: #fff;<br>            line-height: 35px;<br>        }<br><br>        ul li a:hover{<br>            background: url(“bbg_r1_c1.png”);<br>        }<br><br>        ul li a:hover span{<br>            background: url(“bbg_r1_c2.png”) right;<br>        }<br>    </style><br></head><br><body><br>    <ul><br>        <li><a href="#"><span>网易云音乐</span></a></li><br>        <li><a href="#"><span>微信</span></a></li><br>        <li><a href="#"><span>蚂蚁花呗</span></a></li><br>    </ul><br></body><br></html><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">微信案例：</span><br><span class="line">&lt;img src=&quot;http://t1.aixinxi.net/o_1cjdr37d21co1e2a4b0gu5upqa.png-w.jpg&quot; /&gt;</span><br><span class="line">&lt;b&gt;现象：鼠标经过时，背景凸起。&lt;/b&gt;</span><br></pre></td></tr></table></figure><br><br>&lt;!DOCTYPE html&gt;<br><html lang="en"><br><head><br>    <meta charset="UTF-8"><br>    <title>Document</title><br>    <style type="text/css"><br>        body,ul,li,a,span{<br>            margin: 0;<br>            padding: 0;<br>        }<br>        ul,li{<br>            list-style: none;<br>        }<br>        .nav{<br>            height: 74px;<br>            background: url(“weixin_bg.jpg”);<br>        }<br><br>        .nav-con{<br>            width: 600px;<br>            margin: 0 auto;<br>        }<br><br>        li{<br>            float: left;<br>            height: 74px;<br>            line-height: 74px;<br>            margin-right: 60px;<br>        }<br><br>        li a{<br>            display: inline-block;<br>            text-decoration: none;<br>            color: #fff;<br>            height: 33px;<br>            line-height: 33px;<br>            background: url(“bg.png”) no-repeat 0 -144px;<br>            padding-left: 13px;<br>        }<br><br>        a span{<br>            display: inline-block;<br>            height: 33px;<br>            background: url(“bg.png”) no-repeat right -144px;<br>            padding-right: 13px;<br>        }<br><br>        a:hover{<br>            background: url(“bg.png”) no-repeat 0 -192px;<br>        }<br><br>        a:hover span{<br>            background: url(“bg.png”) no-repeat right -192px;<br>        }<br>    </style><br></head><br><body><br>    <div class="nav"><br>        <div class="nav-con"><br>            <ul><br>                <li><a href="#"><span>首页</span></a></li><br>                <li><a href="#"><span>下载文章</span></a></li><br>                <li><a href="#"><span>微信公众公众公众助手</span></a></li><br>            </ul><br>        </div><br>    </div><br></body><br></html><br><code>`</code><br><p style="color:#eee;font-weight: bold;">如有错误，请指点！</p>-->]]></content>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端学习-HTML</title>
      <link href="/2018/05/25/blog1/"/>
      <url>/2018/05/25/blog1/</url>
      <content type="html"><![CDATA[<p></p><h1 style="background-color: #f5f9fa;">HTML（超文本标记语言）</h1><h3 style="text-indent:2em">HTML（超文本标记语言——HyperText Markup Language）是构成 Web 世界的一砖一瓦。它描述并定义了一个网页的内容和基本布局。除 HTML 以外的其它技术则通常用来描述一个网页的表现与展示效果（如 CSS），或功能与行为（如 JavaScript）。</h3><p>“超文本”是指在单个网站内或网站之间将网页彼此连接的链接。链接是网络的基础。只要将内容上传到互联网，并将其与他人创建的页面相链接，你就成为了万维网的积极参与者。</p><p>HTML 使用“标记”来注明文本、图片和其他内容，以便于在 Web 浏览器中显示。HTML 标记包含一些特殊“元素”如<br><code>&lt;head&gt;</code>,<code>&lt;title&gt;</code> , <code>&lt;body&gt;</code>, <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>,<code>&lt;img&gt;</code>等等。</p><p>HTML中的标签不区分大小写。也就是说，它们可以用大写，小写或混合形式书写。示例<code>&lt;title&gt;</code>标签可以写成<code>&lt;Title&gt;</code>，<code>&lt;TITLE&gt;</code>或以任何其他方式。<strong>但我们并不推荐这样混乱的写法，一般我们都是以小写为标准</strong></p><br><small><span style="color:red">这里不具体阐述HTML</span>，因为它并不复杂，如果你想深入的了解它，我推荐你看 <a href="http://www.w3school.com.cn/html/index.asp" title="w3school" style="font-size:24px" target="_blank" rel="noopener">w3cschool</a></small><p></p>]]></content>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搭建Hexo</title>
      <link href="/2018/04/29/hexo-Neo/"/>
      <url>/2018/04/29/hexo-Neo/</url>
      <content type="html"><![CDATA[<p>每个程序猿都应该有一个属于自己的写作（zhuang bi）博客！在很早的时候，我就想拥有一个博客，这段时间也折腾的七七八八了吧。分享一下自己折腾的过程！</p><p><hr><br>在折腾这个博客之前，应该对github有所了解，方便我们之后的操作</p><p></p><h3>所需工具：</h3><br>进入官网下载我们需要的两个工具<p></p><p><ol><br>    <a href="https://nodejs.org/en/" title="node.js官网" target="_blank" rel="noopener"><br>        <li>node.js</li><br>    </a>如图：node.js点击红框下载<br>    <img src="http://t1.aixinxi.net/o_1cer22v9c4kd14bt1a2a4vo1otia.jpg-w.jpg" alt=""><br>    <h4>安装完node.js</h4><em>在Custom Setup这步选择 Add to PATH 这样他自己就帮你配置环境变量了，然后在桌面按 win+r输入cmd并打开，输入path，查看配置环境是否配置成功。接下来查看版本号命令：<code>node -v</code><p>下载完成，照常安装即可。其中node.js官方文档推荐的安装方式是用<a href="https://github.com/creationix/nvm" title="" target="_blank" rel="noopener">nvm</a>&nbsp;个人并不推荐这样的安装方式，因为这样的安装方式需要对Github有一定的了解及操作这里不对nvm安装方法进行详解，可自行了解！</p><br>    <a href="https://git-scm.com/" title="git官网" target="_blank" rel="noopener"><br>        <li>git</li><br>    </a>如图：Git下载<br>    <img src="http://t1.aixinxi.net/o_1cer21q9t1v3h1nu11gbjtpk1prca.jpg-w.jpg" alt=""><br>    安装完Git，打开Gitbash，键入如下命令：git -v 查看版本号<small style="color: #919191"></small></em>有空格<br></ol></p><p></p><h4>安装完Git，打开Gitbash，键入如下命令：<code>git version</code>(查看版本)</h4><br>完成上述两个工具，我们即可动手安装主角“hexo”。<p></p><p>我们使用npm进行安装 键入如下代码：&lt;<code>$ npm install -g hexo-cli</code><br><span style="color: #919191">如果下载速度比较慢的话，可以用国内淘宝镜像&nbsp;键入如下代码：<code>$ npm config set registry”<a href="https://registry.npm.taobao.org&quot;" target="_blank" rel="noopener">https://registry.npm.taobao.org&quot;</a></code><br></span><br>&nbsp;&nbsp;这段代码是把npm默认的源设置成淘宝镜像站的。</p><p></p><h3>*注册Github账号<s style="color: #919191"><small>基友网</small></s></h3><p></p><p><ul><br>    <li><a href="https://github.com/" target="_blank" rel="noopener">前往GitHub官网<small style="color: #919191">如图所示，进行注册or登录</small><br>            <img src="http://t1.aixinxi.net/o_1cer73pp4e4olukosh116l1rf4a.jpg-w.jpg" alt=""><br>        </a><br>    </li><br></ul></p><p></p><h3>注册完成创建仓库</h3><p></p><p><ul><br>    <li>仓库名称为你注册时的用户名 例如我的<a href="https://github.com/hdiebk/hdiebk.github.io" target="_blank" rel="noopener">hdiebk.github.io</a><br>    </li><li>如图创建：</li><br>    <img src="http://t1.aixinxi.net/o_1cere14j21n5914m316u7jojkbca.jpg-w.jpg" alt=""><img src="http://t1.aixinxi.net/o_1cereeikl17ie15h11pa9fem1veha.jpg-w.jpg" alt="">第二个框是描述，可填可不填。<br>    后面配置账号信息，填的就是这个名称。<br></ul></p><p></p><h3>*配置shh</h3><br>在电脑磁盘创建一个文件夹存放blog，可以是任意名称（有意义的名称最好，方便后面自己查看）然后右键找到<strong>git bash here</strong>并打开<p></p><p><ul><br>    <li>输入<code>ssh-keygen -t rsa -C </code>“你注册的邮箱” 并回车，会让你输入GitHub账号及密码</li><small style="color: #919191">当时忘了截图，大家注意看控制台就好</small><br>    出现c盘地址，根据这个地址我们到c盘中找到该文件<img src="http://t1.aixinxi.net/o_1cerciq2kru0dg1njcbq61dpla.jpg-w.jpg" alt="">其中id_rsa是私有密钥（不要透露），id_rsa.pub是公共密钥<br>    <li>然后打开公共密钥，复制下里面所有内容，登陆进去你的Github</li><br>    <img src="http://t1.aixinxi.net/o_1cerd2ni613el1oam512vr8spia.jpg-w.jpg" alt=""><img src="http://t1.aixinxi.net/o_1cerd5rkdtd3m5h1mjd74hhnfa.jpg-w.jpg" alt="">点击右上角的头像，找到图中对应的结果，点击右上角 New SSH Key按钮，Title随便填，key填入之前复制的内容即可。<br>    <li>最后一步</li>测试是否配对成功，在<strong>git bash here</strong>键入：<code>ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></code>，会询问是否继续链接，输入yes即可。配置完成！<br></ul></p><p></p><h3>安装hexo</h3><p></p><p><ul><br>    <li>执行命令进行安装</li><br>    <small>一条一条来</small><br><code>npm install hexo-cli g<br>hexo init blog<br>cd blog<br>npm install<br>npm install hexo-server –save<br>npm install hexo-admin –save<br>npm install hexo-generator-archive –save<br>npm install hexo-generator-feed –save<br>npm install hexo-generator-search –save<br>npm install hexo-generator-tag –save<br>npm install hexo-deployer-git –save<br>npm install hexo-generator-sitemap –save<br></code><br></ul></p><p></p><h3>hexo将至</h3><p></p><p><ul><br>    <li>在本地服务器中使用</li><br>    <small>键入如下命令：</small><br>    <code>hexo generate</code><br>    <code>hexo s</code><br>    <li>此时打开浏览器，输入：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>就可以看到一个静态网页呈现在你面前</li><br>    <small>如果输入<a href="http://localhost:4000/浏览器出错，则是端口对占用的缘故。此时我们在" target="_blank" rel="noopener">http://localhost:4000/浏览器出错，则是端口对占用的缘故。此时我们在</a><strong>git bash here</strong>Ctrl+c中断链接，然后我们需要在<strong>git bash here</strong>键入：hexo s -p 5000</small>更改端口地址。更改好以后输入：<a href="http://localhost:5000/" target="_blank" rel="noopener">http://localhost:5000/。<br></a></ul></p><p></p><h3>上传GitHub</h3><p></p><p><ul><br>    <li>修改配置文件</li><br>    在之前创建好的本地文件夹中，找到文件夹下/_config.yml，修改deploy内容的红框中的三个参数<br>    <img src="http://t1.aixinxi.net/o_1cerhij0k150q18io11v73n382a.jpg-w.jpg" alt=""><small>第二个框中修改为自己的用户名</small><br></ul></p><p></p><h3>部署hexo</h3><p></p><p><ul><br>    <li>输入命令</li><br>    <code>hexo clean<br>hexo generate<br>hexo deploy</code><br>可缩写为<code>hexo g：hexo generate<br>hexo c：hexo clean<br>hexo s：hexo server<br>hexo d：hexo deploy</code>或者缩写为<code>hexo g -s</code><code>hexo g -d</code><br></ul><br>这时候我们在浏览器里，输入：https://你的用户.github.io/例如我的：<a href="https://hdiebk.github.io/">https://hdiebk.github.io/</a></p><p>到这一步我们就大功告成了，接下来我还会继续讲述我的hexo折腾之路。</p>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
