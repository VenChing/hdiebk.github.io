<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[前端学习-CSS]]></title>
    <url>%2F2018%2F07%2F24%2Fblog-css%2F</url>
    <content type="text"><![CDATA[CSS-初印象CSS全称为层叠样式表 (Cascading Style Sheets)(级联样式表)前端页面是把网页分成三个层次，即：HTML(结构层)、CSS(表示层)以及JavaScript(行为层)，而CSS通俗的说就像是女生的化妆品，用来美化结构层的。1.CSS三种写法： ①内部样式 1234567 &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; &lt;!-- 样式内容 --&gt; &lt;/style&gt;&lt;/head&gt; ②外联样式 12345 &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=”stylesheet” href=”css的路径”&gt; &lt;!-- 在head里面 --&gt;&lt;/head&gt; ③行内样式 通过内嵌(style=”xxx;”)来书写样式代码 1&lt;p style=&quot;background:#f5f9fa;&quot;&gt;&lt;/p&gt; 三种样式写法区别： 内嵌法：样式只能作用于当前页面，不能被其他页面共享使用，代码量多的时候，界面容易混淆。 外联法：作用范围是当前站点，现实了结构分离 谁调用谁生效，范围广，可以被其他页面共享。 行内法：作用范围仅限当前标签，范围小，结构表现混在一起，代码量多的时候容易混淆。2.认识标签类型①块级元素1代表元素：&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;…&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;li&gt;、&lt;address&gt;、&lt;blockquote&gt;、&lt;form&gt;②行内元素1代表元素：&lt;a&gt;、&lt;span&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;③行内快元素也称之为内联元素1代表元素：&lt;input&gt;,&lt;img&gt;三种元素的特点：①块元素:1.每个快属性标签都是从新的一行开始，而且之前的元素也会从下一行开始（独占一行）2.快元素属性都可以设置宽，高，行高，间距3.块元素属性宽度如果没有设置，则会默认父元素宽度的100%4.块属性可以直接嵌套（p标签中不能嵌套div标签）②行内元素：1.行内元素和其它标签同处一行显示2.行内元素无法设置宽，高，行高，间距3.行元素的宽 高是直接由内部的文字或者图片等内容撑开（宽 高度由内容撑开）4.行属性标签内部不能嵌套行属性标签（a链接内不能嵌套其他链接）③行内块元素：1.在同一行上显示2.可以设置宽 高三者可以相互转换 块元素转行内元素 1display:inline; 行内元素转换块元素 1display:block; 块元素和行内元素转换行内块元素(使用率最高) 1display:inline-block;CSS选择器选择器是一种选择标签的过程一个简单的标签如下：1选择器&#123;属性:值;属性:值......&#125;选择器的类型： 标签选择器 标签{属性:值;} //特点：标签选择器定义之后。会将页面所有元素都执行这个标签样式。 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; div&#123; font-size: 50px; color: red &lt;!-- 定义div标签字体大小为50px;总体颜色为红色 --&gt; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;这是一个div&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;属性选择器1234input[type=&quot;text&quot;][class] &#123; width: 20px; height: 20px;&#125;选择有type属性为text，并且有class属性的标签。1234input[type=&quot;text&quot;][class=&quot;id&quot;] &#123; width: 20px; height: 20px;&#125;选择有type属性为text，并且有class属性，并且class属性为 id 的标签。类选择器.类名{属性:值;属性:值;} // 特点：谁调用，谁生效。一个类选择器可以被多个标签调用，同时一个标签可以调用多个类（类名可被多次调用）1234.box&#123;background-color:#ccc;&#125;&lt;div class=&quot;box&quot;&gt;这是一个div&lt;/div&gt; &lt;!-- 调用类名为box --&gt;类选择器命名规则不能以纯数字或者数字开头定义类名不能使用特殊符号或者特殊符号开头(_ 除开)定义类名不建议使用中文来命名不推荐使用属性或者属性的值来命名常用命名ID选择器1#自定义名称&#123;属性:值;&#125; //特点：1.一个ID选择器在一个页面只能调用一次。如果使用2次或者2次以上，不符合w3c规范，JS调用会出问题。2.一个标签只能调用一个ID选择器。3.一个标签可以同时调用类选择器和ID选择器。通配符1*&#123;属性:值;&#125;&#123;属性:值;&#125;特点： 1.给所有的标签都使用相同的样式。 2.不推荐使用，增加浏览器和服务器负担 css复合选择器概念：复合选择器就是两个或多个基本选择器，通过不同的方式连接成的选择器。 交集选择器1234567标签+类（ID）选择器&#123;属性：值；&#125;span.box&#123;font-size:16px;&#125;特点：即要满足使用了某个标签，还要满足使用了类选择器或者ID选择器。后代选择器1234567891011选择器+空格+选择器&#123;属性：值;&#125;body div span&#123;font-size:16px;&#125;后代选择器首选要满足包含（嵌套）关系。父集元素在前边，子集元素在后边。特点：无限制隔代。（下面都会生效）子代选择器12345678选择器&gt;选择器&#123;属性:值;&#125;h1 &gt; strong &#123;font-size:16px;&#125;这个规则会把第一个 h1 下面的两个 strong 元素变为红色，但是第二个 h1 中的 strong 不受影响：&lt;h1&gt;This is &lt;strong&gt;very&lt;/strong&gt; &lt;strong&gt;very&lt;/strong&gt; important.&lt;/h1&gt;&lt;h1&gt;This is &lt;em&gt;really &lt;strong&gt;very&lt;/strong&gt;&lt;/em&gt; important.&lt;/h1&gt;并集选择器（群选择器）12选择器+，+选择器+，选择器&#123;属性:值;&#125;span ,body ,.blue &#123;font-size:16px;&#125;伪类选择器1234567891011div:link&#123;...&#125; 链接默认状态div:visited&#123;...&#125; 链接访问之后的状态div:hover&#123;...&#125; 鼠标放到链接上显示的状态div:active&#123;...&#125; 链接激活的状态如果需要全部，则必须按照L V H A 这个顺序写，否则会出现不显示的情况div:focus&#123;...&#125; 获取焦点文本元素属性12345font-size:50px; //文字大小font-weight: 700; //值从100-900，文字粗细,700约等于Bold，不推荐使用font-weight:bold;font-family:微软雅黑; //文本的字体font-style: normal | italic; //normal:默认值 italic:斜体line-height: //行高文本属性连写123456font: font-style font-weight font-size/line-height font-family;font: italic 700 50px/40px 微软雅黑;注意：font:后边写属性的值。一定按照书写顺序。文本属性连写文字大小和字体为必写项。文字的表达方式 1.直接写中文名称 1font-family: 微软雅黑; 2.写字体的英文名称 1font-family: microsoft yahei; 3.unicode 编码（解析更快） 如何找到某一字体相对应的unicode编码呢？第一步：f12第二步：找到console第三步：输入escape(“宋体”) 注意英文的括号和双引号。文本修饰1text-decoration: none | underline | line-through | ...... // 链接下划线/删除线/......CSS三大特性层叠性当多个样式作用于同一个（同一类）标签时，样式发生了冲突，总是执行后边的代码(后边代码层叠前边的代码)。和标签调用选择器的顺序没有关系。继承性继承性发生的前提是包含（嵌套关系）★文字颜色可以继承★文字大小可以继承★字体可以继续★字体粗细可以继承★文字风格可以继承★行高可以继承总结：文字的所有属性都可以继承。特殊情况：h系列不能继承文字大小。（继承了但是不显示）（h1显示的是：你设置的font-size 2h2显示的是：你设置的font-size * 1.5…….）a链接标签不能继承文字颜色（继承了但是不显示，链接标签默认是蓝色）优先级不同级别1.在属性后面使用 !important 会覆盖页面内任何位置定义的元素样式。2.作为style属性写在元素内的样式3.id选择器4.类选择器5.通配符选择器6.浏览器自定义或继承它们的优先级为：!important &gt; 行内样式&gt;ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性同一级别1.同一级别中后写的会覆盖先写的样式2.应用权重计算（所用数字并不代表它们只值那个数，只是用来具体说明问题） 内联样式表的权值为 1000 ID 选择器的权值为 100 Class 类选择器的权值为 10 HTML 标签选择器的权值为 1背景属性12345background-color： 背景颜色background-image： 背景图片Background-repeat： repeat(默认) | no-repeat | repeat-x | repeat-y 背景平铺Background-position： left | right | center（默认） | top | bottom 背景定位Background-attachment 背景是否滚动 scroll（默认） | fixedBackground-position 背景定位12345background-position: right; // 方位值只写一个的时候，另外一个值默认居中。background-position: right bottom // 写2个方位值的时候，顺序没有要求background-position: 20px 30px // 写2个具体值的时候，第一个值代表水平方向，第二个值代表垂直方向Background-attachment 背景滚动1234scroll: 背景图的位置是基于盒子（假如是div）的范围进行显示fixed：背景图的位置是基于整个浏览器body的范围进行显示，如果背景图定义在div里面，而显示的位置在浏览器范围内但是不在div的范围内的话，背景图无法显示。背景属性连写123background: red url(&quot;1.png&quot;) no-repeat 30px 40px scroll;连写的时候没有顺序要求，url为必写项行高浏览器默认文字大小：16px行高：是基线与基线之间的距离行高 = 文字高度+上下边距推荐行高使用像素为单位。盒子模型border（边框）1234567Border-top-style: solid 实线 dotted 点线 dashed 虚线 none 无边框Border-top-color 边框颜色Border-top-width 边框粗细除了有top系列外还有left,right,bottom系列边框属性的连写12border-top: 1px solid #fff;没有顺序要求，线型为必写项四个边框值相同的写法12border: 1px solid #fff;没有顺序要求，线型为必写项边框合并（细线边框）1border-collapse:collapse;获取焦点label for id 获取光标焦点（点击label也可以选择文本框）1&lt;label for=&quot;username&quot;&gt;用户名：&lt;/label&gt;&lt;input type=&quot;text&quot; class=&quot;username&quot; id=&quot;username&quot;&gt;&lt;/input&gt;用户名：padding（内边距）1padding-left | right | top | bottompadding连写1234Padding: 20px; //上右下左内边距都是20pxPadding: 20px 30px; //上下20px 左右30pxPadding: 20px 30px 40px; // 上内边距为20px 左右内边距为30px 下内边距为40Padding: 20px 30px 40px 50px; //上20px 右30px 下40px 左 50pxmargin（外边距）1margin-left | right | top | bottom 外边距连写 12345Margin: 20px; 上下左右外边距20PXMargin: 20px 30px; 上下20px 左右30px（margin: 0 auto; 盒子居中对齐 text-align:center 是盒子里面的内容居中）Margin: 20px 30px 40px; 上20px 左右30px 下 40pxMargin: 20px 30px 40px 50px; 上20px 右30px 下40px 左50px 垂直方向外边距合并（取最大值）两个盒子垂直，一个设置上外边距，一个设置下外边距，取的设置较大的值。 嵌套的盒子外边距塌陷嵌套的盒子，直接给子盒子设置垂直方向外边距的时候，会发生外边距的塌陷（父盒子跟着移动）解决方法:1.给父盒子设置边框2.给父盒子overflow:hidden;标准盒子模型从上图可以看到标准 W3C 盒子模型的范围包括 margin、border、padding、content，并且 content 部分不包含其他部分。(width和height是content的长与宽 )IE盒子模型从上图可以看到 IE 盒子模型的范围也包括 margin、border、padding、content，和标准 W3C 盒子模型不同的是：IE 盒子模型的 content 部分包含了 border 和 pading。它们转换的方法：12box-sizing: border-box; IE盒子box-sizing: content-box; W3C盒子浮动 文档流（标准流）元素自上而下，自左而右，块元素独占一行，行内元素在一行上显示，碰到父集元素的边框换行。浮动布局1float: left | right （浮动方向）特点：1.元素浮动之后不占据原来的位置（脱标）2.浮动的盒子在一行上显示3.行内元素浮动之后自动转换为行内块元素。（不推荐使用，转行内元素最好使用display: inline-block;）浮动的作用文本绕图制作导航（经常使用）- 把无序列表ul li 浮动起来做成的导航。html部分：1234567891011&lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;ul&gt; &lt;li&gt; 首页&lt;/li&gt; &lt;li&gt; 资讯&lt;/li&gt; &lt;li&gt; 服务&lt;/li&gt; &lt;li&gt; 售后&lt;/li&gt; &lt;li&gt; 关于&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/body&gt; css部分：1234567891011121314151617&lt;style&gt;*&#123; margin: 0; padding: 0;&#125; .nav&#123; width: 100%; height: 60px; background-color: #56d; &#125; .nav li&#123; line-height: 60px; float: left; margin: 0 50px; list-style: none; &#125;&lt;/style&gt;- 网页布局清除浮动问题：当父盒子没有定义高度，嵌套的盒子浮动之后，下边的元素发生位置错误（占据父盒子的位置）。清除浮动不是不用浮动，清除浮动产生的问题。方法一额外标签法：在最后一个浮动元素后添加标签。1clear: left | right | both // 工作里用的最多的是clear:both;方法二给浮动元素的父集元素使用overflow:hidden;注意：如果有内容出了盒子，不能使用这个方法。方法三（推荐使用）伪元素清除浮动:after 相当于在当前盒子后加了一个盒子。CSS初始化- 腾讯1234567891011121314151617body,ol,ul,h1,h2,h3,h4,h5,h6,p,th,td,dl,dd,form,fieldset,legend,input,textarea,select&#123;margin:0;padding:0&#125;body&#123;font:12px&quot;宋体&quot;,&quot;Arial Narrow&quot;,HELVETICA;background:#fff;-webkit-text-size-adjust:100%;&#125;a&#123;color:#2d374b;text-decoration:none&#125;a:hover&#123;color:#cd0200;text-decoration:underline&#125;em&#123;font-style:normal&#125;li&#123;list-style:none&#125;img&#123;border:0;vertical-align:middle&#125;table&#123;border-collapse:collapse;border-spacing:0&#125;p&#123;word-wrap:break-word&#125;- 新浪12345678body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div&#123;margin:0;padding:0;border:0;&#125;body&#123;background:#fff;color:#333;font-size:12px; margin-top:5px;font-family:&quot;SimSun&quot;,&quot;宋体&quot;,&quot;Arial Narrow&quot;;&#125;ul,ol&#123;list-style-type:none;&#125;select,input,img,select&#123;vertical-align:middle;&#125;a&#123;text-decoration:none;&#125;a:link&#123;color:#009;&#125;a:visited&#123;color:#800080;&#125;a:hover,a:active,a:focus&#123;color:#c00;text-decoration:underline;&#125;- 淘宝123456789101112131415body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td &#123; margin:0; padding:0; &#125;body, button, input, select, textarea &#123; font:12px/1.5tahoma, arial, \5b8b\4f53; &#125;h1, h2, h3, h4, h5, h6&#123; font-size:100%; &#125;address, cite, dfn, em, var &#123; font-style:normal; &#125;code, kbd, pre, samp &#123; font-family:couriernew, courier, monospace; &#125;small&#123; font-size:12px; &#125;ul, ol &#123; list-style:none; &#125;a &#123; text-decoration:none; &#125;a:hover &#123; text-decoration:underline; &#125;sup &#123; vertical-align:text-top; &#125;sub&#123; vertical-align:text-bottom; &#125;legend &#123; color:#000; &#125;fieldset, img &#123; border:0; &#125;button, input, select, textarea &#123; font-size:100%; &#125;table &#123; border-collapse:collapse; border-spacing:0; &#125;overflowoverflow属性规定当内容溢出元素框时发生的事情.scroll：一直有滚动条.auto：只有内容出了盒子才有滚动条。定位1定位方向: left | right | top | bottom静态定位（默认值）1position: static; // 就是文档流式的定位模式。绝对定位123position:absolute;然后使用left | right | top | bottom 来确定具体位置。特点：1.元素使用绝对定位之后不占据原来的位置（脱标）2.元素使用绝对定位，位置是从浏览器出发。3.嵌套的盒子，父盒子没有使用定位，子盒子绝对定位，子盒子位置是从浏览器出发。4.嵌套的盒子，父盒子使用定位，子盒子绝对定位，子盒子位置是从父元素位置出发。5.给行内元素使用绝对定位之后，转换为行内块。（不推荐使用，推荐使用display:inline-block;）相对定位1position: relative;特点：1.使用相对定位，位置从自身出发。2.不脱标，其他的元素不能占有其原来的位置。3.子绝父相（父元素相对定位，子元素绝对定位），用的最多的场景。4.行内元素使用相对定位不能转行内块元素。固定定位1position:fixed;特点：1.固定定位之后，不占据原来的位置（脱标）2.元素使用固定定位之后，位置从浏览器出发。3.元素使用固定定位之后，会转化为行内块（不推荐，推荐用display:inline-block;）定位（脱标）的盒子居中对齐margin:0 auto; 只能让标准流的盒子居中对齐定位的盒子居中：子绝父相，然后子盒子先往右走父盒子的一半50%，在向左走子盒子的一半(margin-left:负值。)PS：z-index:10改变层叠优先级，值越大优先级越高标签包含规范- div可以包含所有的标签。- p标签不能包含div h1等标签（一般包含行内元素）。- h1可以包含p，div等标签（一般不这样）。- 行内元素尽量包含行内元素，行内元素不要包含块元素。规避脱标流- 尽量使用标准流。- 标准流解决不了的使用浮动。- 浮动解决不了的使用定位。1margin-left:auto; //盒子一直往右冲，一直冲不动为止。也是 margin:0 auto; 的由来。图片和文字垂直居中对齐12vertical-align 主要用在 inline-block 标签上，效果最好。默认属性是: vertical-align:baseline;属性值标CSS可见性12345678overflow:hidden; 溢出隐藏 visibility:hidden; 隐藏元素 隐藏之后还保留原来的位置。display:none; 隐藏元素 隐藏之后不保留原来的位置。Display:block; 元素可见----------------------------------------------------Display:none 和display:block 常配合js使用（如：鼠标经过时出现，鼠标离开时消失）。css之内容移除（logo优化）- 方法一：1text-indent:-5000em; 之所以要写着两个字是为了SEO，因为背景图片SEO看不懂.- 方法二：将元素高度设置为0, 使用内边距将盒子撑开，给盒子使用overflow:hidden; 将文字隐藏。1234567.box&#123; width:300px; height:0; padding-top:100px; overflow:hidden; background:red;&#125;CSS精灵图 1：上图所示为网页的请求原理图，当用户访问一个网站时，需要向服务器发送请求，网页上的每张图像都要经过一次请求才能展现给用户。 2：然而，一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接受和发送请求，这将大大降低页面的加载速度。为了有效地减少服务器接受和发送请求的次数，提高页面的加载速度，出现了CSS精灵技术（也称CSS Sprites）。简单地说，CSS精灵是一种处理网页背景图像的方式。它将一个页面涉及到的所有零星背景图像都集中到一张大图中去，然后将大图应用于网页，这样，当用户访问该页面时，只需向服务发送一次请求，网页中的背景图像即可全部展示出来。通常情况下，这个由很多小的背景图像合成的大图被称为精灵图，如下图所示为淘宝网站中的一个精灵图。 工作原理：CSS 精灵其实是将网页中的一些背景图像整合到一张大图中（精灵图）。然而，各个网页元素通常只需要精灵图中不同位置的某个小图，要想精确定位到精灵图中的某个小图，就需要使用CSS的background-image、background-repeat和background-position属性进行背景定位，其中最关键的是使用background-position属性精确地定位。 举例：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; body,ul,li&#123; margin: 0; padding: 0; &#125; ul, li&#123; list-style: none; &#125; .box&#123; height: 48px; background: #222; margin-top: 50px; &#125; .con&#123; width: 1182px; height: 48px; margin: 0 auto; position: relative; &#125; .con ul li&#123; float: left; &#125; .con ul li a&#123; text-decoration: none; color: #fff; display: inline-block; height: 48px; font: 16px/48px microsoft yahei; padding: 0 18px; &#125; .con ul li a:hover&#123; background: #2774A2; &#125; .con .hot&#123; position: absolute; width: 31px; height: 21px; background: url(&quot;spirit.png&quot;) -58px 0; left:221px; bottom:35px; &#125; .con .new&#123; position: absolute; width: 31px; height: 21px; background: url(&quot;spirit.png&quot;) -135px 0; left:90px; bottom:35px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;con&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;首页&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;IOS&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;C/C++&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;UI设计&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;前端与移动开发&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;问答专区&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;网络营销&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;活动专区&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;hot&quot;&gt;&lt;/div&gt; &lt;div class=&quot;new&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 1PS：之所以选择con作为父盒子而不是box作为父盒子，是因为box的宽度不定，不同的显示器宽度不同，那么new和hot的定位就有问题。 CSS滑动门 边上是这种圆弧型的或者其他形状的，可以变换长度的样式。 特点：浮动之后宽度不是父盒子的宽度，而是内容撑开的宽度。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; body,ul,li&#123; margin: 0; padding: 0; &#125; ul,li&#123; list-style: none; &#125; ul li&#123; float: left; &#125; ul li a&#123; display: inline-block; height: 35px; background: url(&quot;bg_r1_c1.png&quot;) no-repeat; padding-left: 7px; &#125; ul li a span&#123; display: inline-block; height: 35px; background: url(&quot;bg_r1_c2.png&quot;) right; padding-right: 25px; color: #fff; line-height: 35px; &#125; ul li a:hover&#123; background: url(&quot;bbg_r1_c1.png&quot;); &#125; ul li a:hover span&#123; background: url(&quot;bbg_r1_c2.png&quot;) right; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;网易云音乐&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;微信&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;蚂蚁花呗&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 微信案例：现象：鼠标经过时，背景凸起。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; body,ul,li,a,span&#123; margin: 0; padding: 0; &#125; ul,li&#123; list-style: none; &#125; .nav&#123; height: 74px; background: url(&quot;weixin_bg.jpg&quot;); &#125; .nav-con&#123; width: 600px; margin: 0 auto; &#125; li&#123; float: left; height: 74px; line-height: 74px; margin-right: 60px; &#125; li a&#123; display: inline-block; text-decoration: none; color: #fff; height: 33px; line-height: 33px; background: url(&quot;bg.png&quot;) no-repeat 0 -144px; padding-left: 13px; &#125; a span&#123; display: inline-block; height: 33px; background: url(&quot;bg.png&quot;) no-repeat right -144px; padding-right: 13px; &#125; a:hover&#123; background: url(&quot;bg.png&quot;) no-repeat 0 -192px; &#125; a:hover span&#123; background: url(&quot;bg.png&quot;) no-repeat right -192px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;div class=&quot;nav-con&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;首页&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;下载文章&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;微信公众公众公众助手&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 如有错误，请指点！]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端学习-HTML]]></title>
    <url>%2F2018%2F05%2F25%2Fblog1%2F</url>
    <content type="text"><![CDATA[HTML（超文本标记语言）HTML（超文本标记语言——HyperText Markup Language）是构成 Web 世界的一砖一瓦。它描述并定义了一个网页的内容和基本布局。除 HTML 以外的其它技术则通常用来描述一个网页的表现与展示效果（如 CSS），或功能与行为（如 JavaScript）。“超文本”是指在单个网站内或网站之间将网页彼此连接的链接。链接是网络的基础。只要将内容上传到互联网，并将其与他人创建的页面相链接，你就成为了万维网的积极参与者。HTML 使用“标记”来注明文本、图片和其他内容，以便于在 Web 浏览器中显示。HTML 标记包含一些特殊“元素”如&lt;head&gt;,&lt;title&gt; , &lt;body&gt;, &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, &lt;section&gt;, &lt;p&gt;, &lt;div&gt;, &lt;span&gt;,&lt;img&gt;等等。HTML中的标签不区分大小写。也就是说，它们可以用大写，小写或混合形式书写。示例&lt;title&gt;标签可以写成&lt;Title&gt;，&lt;TITLE&gt;或以任何其他方式。但我们并不推荐这样混乱的写法，一般我们都是以小写为标准这里不具体阐述HTML，因为它并不复杂，如果你想深入的了解它，我推荐你看 w3cschool]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建Hexo]]></title>
    <url>%2F2018%2F04%2F29%2Fhexo-Neo%2F</url>
    <content type="text"><![CDATA[每个程序猿都应该有一个属于自己的写作（zhuang bi）博客！在很早的时候，我就想拥有一个博客，这段时间也折腾的七七八八了吧。分享一下自己折腾的过程！ 在折腾这个博客之前，应该对github有所了解，方便我们之后的操作 所需工具：进入官网下载我们需要的两个工具 node.js 如图：node.js点击红框下载 安装完node.js在Custom Setup这步选择 Add to PATH 这样他自己就帮你配置环境变量了，然后在桌面按 win+r输入cmd并打开，输入path，查看配置环境是否配置成功。接下来查看版本号命令：node -v下载完成，照常安装即可。其中node.js官方文档推荐的安装方式是用nvm&nbsp;个人并不推荐这样的安装方式，因为这样的安装方式需要对Github有一定的了解及操作这里不对nvm安装方法进行详解，可自行了解！ git 如图：Git下载 安装完Git，打开Gitbash，键入如下命令：git -v 查看版本号有空格 安装完Git，打开Gitbash，键入如下命令：git version(查看版本)完成上述两个工具，我们即可动手安装主角“hexo”。 我们使用npm进行安装 键入如下代码：&lt;$ npm install -g hexo-cli如果下载速度比较慢的话，可以用国内淘宝镜像&nbsp;键入如下代码：$ npm config set registry”https://registry.npm.taobao.org&quot;&nbsp;&nbsp;这段代码是把npm默认的源设置成淘宝镜像站的。 *注册Github账号基友网 前往GitHub官网如图所示，进行注册or登录 注册完成创建仓库 仓库名称为你注册时的用户名 例如我的hdiebk.github.io 如图创建： 第二个框是描述，可填可不填。 后面配置账号信息，填的就是这个名称。 *配置shh在电脑磁盘创建一个文件夹存放blog，可以是任意名称（有意义的名称最好，方便后面自己查看）然后右键找到git bash here并打开 输入ssh-keygen -t rsa -C “你注册的邮箱” 并回车，会让你输入GitHub账号及密码当时忘了截图，大家注意看控制台就好 出现c盘地址，根据这个地址我们到c盘中找到该文件其中id_rsa是私有密钥（不要透露），id_rsa.pub是公共密钥 然后打开公共密钥，复制下里面所有内容，登陆进去你的Github 点击右上角的头像，找到图中对应的结果，点击右上角 New SSH Key按钮，Title随便填，key填入之前复制的内容即可。 最后一步测试是否配对成功，在git bash here键入：ssh -T git@github.com，会询问是否继续链接，输入yes即可。配置完成！ 安装hexo 执行命令进行安装 一条一条来npm install hexo-cli ghexo init blogcd blognpm installnpm install hexo-server –savenpm install hexo-admin –savenpm install hexo-generator-archive –savenpm install hexo-generator-feed –savenpm install hexo-generator-search –savenpm install hexo-generator-tag –savenpm install hexo-deployer-git –savenpm install hexo-generator-sitemap –save hexo将至 在本地服务器中使用 键入如下命令： hexo generate hexo s 此时打开浏览器，输入：http://localhost:4000/就可以看到一个静态网页呈现在你面前 如果输入http://localhost:4000/浏览器出错，则是端口对占用的缘故。此时我们在git bash hereCtrl+c中断链接，然后我们需要在git bash here键入：hexo s -p 5000更改端口地址。更改好以后输入：http://localhost:5000/。 上传GitHub 修改配置文件 在之前创建好的本地文件夹中，找到文件夹下/_config.yml，修改deploy内容的红框中的三个参数 第二个框中修改为自己的用户名 部署hexo 输入命令 hexo cleanhexo generatehexo deploy可缩写为hexo g：hexo generatehexo c：hexo cleanhexo s：hexo serverhexo d：hexo deploy或者缩写为hexo g -shexo g -d这时候我们在浏览器里，输入：https://你的用户.github.io/例如我的：https://hdiebk.github.io/ 到这一步我们就大功告成了，接下来我还会继续讲述我的hexo折腾之路。]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
